{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","reportWebVitals.js","index.js"],"names":["Header","PropTypes","branding","string","isRequired","this","props","className","to","Component","About","NotFound","Test","state","id","name","email","phone","fetch","match","params","then","response","json","data","setState","Context","React","createContext","reducer","action","type","contacts","filter","contact","payload","map","Provider","dispatch","a","axios","get","res","value","children","Consumer","Contact","showContactInfo","onDeleteClick","delete","object","style","cursor","paddingLeft","onClick","float","color","bind","marginRight","Contacts","Fragment","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updateContact","put","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAkCeA,E,4MA9BXC,UAAY,CACRC,SAAUD,IAAUE,OAAOC,Y,4CAE/B,WAAU,IACCF,EAAYG,KAAKC,MAAjBJ,SACP,OACI,8BACI,qBAAKK,UAAY,8CAAjB,SACI,sBAAKA,UAAY,YAAjB,UACI,cAAC,IAAD,CAAMA,UAAY,eAAeC,GAAG,IAApC,SACKN,IAEL,qBAAIK,UAAY,aAAhB,UACI,oBAAIA,UAAY,WAAhB,SACI,eAAC,IAAD,CAAMA,UAAY,WAAWC,GAAG,IAAhC,UAAoC,mBAAGD,UAAY,qBAAnD,YAEJ,oBAAIA,UAAY,WAAhB,SACI,eAAC,IAAD,CAAMA,UAAY,WAAWC,GAAG,eAAhC,UAA+C,mBAAGD,UAAY,qBAA9D,mBAEJ,oBAAIA,UAAY,WAAhB,SACI,eAAC,IAAD,CAAMA,UAAY,WAAWC,GAAG,SAAhC,UAAyC,mBAAGD,UAAY,yBAAxD,8B,GArBXE,aCDN,SAASC,IACpB,OACI,gCACI,qBAAIH,UAAY,YAAhB,UAA4B,sBAAMA,UAAY,cAAlB,mBAA5B,sBACA,mBAAGA,UAAY,OAAf,2CACA,mBAAGA,UAAY,iBAAf,4BCLG,SAASI,IACpB,OACI,gCACI,qBAAIJ,UAAY,YAAhB,UAA4B,sBAAMA,UAAY,cAAlB,iBAA5B,qBACA,mBAAGA,UAAY,OAAf,+C,IC2BGK,E,4MA/BXC,MAAQ,CACJC,GAAI,GACJC,KAAM,GACNC,MAAO,GACPC,MAAO,I,uDAEX,WAAoB,IAAD,OACfC,MAAM,8CAA8Cb,KAAKC,MAAMa,MAAMC,OAAON,IAC3EO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKC,SAAS,CACVX,GAAIU,EAAKV,GACTC,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,MACZC,MAAOO,EAAKP,a,oBAIxB,WAAU,IAAD,EACyBZ,KAAKQ,MAA5BC,EADF,EACEA,GAAGC,EADL,EACKA,KAAKC,EADV,EACUA,MAAMC,EADhB,EACgBA,MACrB,OACI,gCACI,qBAAIV,UAAY,YAAhB,UAA4B,sBAAMA,UAAY,cAAlB,kBAA5B,0BACA,+BAAI,sBAAMA,UAAY,cAAlB,gBAAJ,KAAgDO,KAChD,wCAAWC,KACX,yCAAYC,KACZ,yCAAYC,Y,GA3BTR,a,6ECCbiB,EAAWC,IAAMC,gBACjBC,EAAU,SAAChB,EAAOiB,GACpB,OAAOA,EAAOC,MACV,IAAK,iBACD,kCACOlB,GADP,IAEImB,SAAUnB,EAAMmB,SAASC,QACrB,SAAAC,GAAO,OAAIA,EAAQpB,KAAOgB,EAAOK,aAG7C,IAAK,cACD,kCACOtB,GADP,IAEImB,SAAS,CAAEF,EAAOK,SAAV,mBAAqBtB,EAAMmB,aAE3C,IAAK,iBACD,kCACOnB,GADP,IAEImB,SAAUnB,EAAMmB,SAASI,KACrB,SAAAF,GAAO,OAAIA,EAAQpB,KAAOgB,EAAOK,QAAQrB,GACrCoB,EAAUJ,EAAOK,QACjBD,OAGhB,QACI,OAAOrB,IAGNwB,EAAb,4MACIxB,MAAQ,CACJmB,SAAU,GACVM,SAAW,SAAAR,GAAM,OAAI,EAAKL,UACtB,SAAAZ,GAAK,OAAIgB,EAAQhB,EAAMiB,QAJnC,8FAOI,4BAAAS,EAAA,sEACsBC,IAAMC,IAAI,8CADhC,OACUC,EADV,OAEIrC,KAAKoB,SAAS,CAACO,SAAUU,EAAIlB,OAFjC,gDAPJ,0EAWI,WACI,OACI,cAACE,EAAQW,SAAT,CAAkBM,MAAStC,KAAKQ,MAAhC,SACKR,KAAKC,MAAMsC,eAd5B,GAA8BnC,aAmBjBoC,EAAWnB,EAAQmB,SCmBjBC,E,4MA9DXjC,MAAQ,CACJkC,iBAAkB,G,EAEtBC,c,uCAAgB,WAAOlC,EAAIwB,GAAX,SAAAC,EAAA,+EAEFC,IAAMS,OAAN,qDAA2DnC,IAFzD,OAGRwB,EAAS,CACLP,KAAM,iBACNI,QAASrB,IALL,+CASRwB,EAAS,CACLP,KAAM,iBACNI,QAASrB,IAXL,wD,0DAehBb,UAAY,CACRiC,QAASjC,IAAUiD,OAAO9C,Y,4CAE9B,WAAU,IAAD,SACyBC,KAAKC,MAAM4B,QAAlCpB,EADF,EACEA,GAAGC,EADL,EACKA,KAAKC,EADV,EACUA,MAAMC,EADhB,EACgBA,MACd8B,EAAmB1C,KAAKQ,MAAxBkC,gBACP,OACI,cAACF,EAAD,UACK,SAAAF,GAAU,IACAL,EAAYK,EAAZL,SACP,OACI,sBAAK/B,UAAY,sBAAjB,UACI,+BAAKQ,EACD,mBAAGR,UAAU,mBACT4C,MAAS,CAACC,OAAQ,UAAUC,YAAa,UACzCC,QAAS,WACL,EAAK7B,SAAS,CAACsB,iBAAiB,EAAKlC,MAAMkC,qBAGnD,mBAAGxC,UAAY,eACX4C,MAAS,CAACC,OAAQ,UAAUG,MAAO,QAASC,MAAO,OACnDF,QAAW,EAAKN,cAAcS,KAAK,EAAK3C,EAAGwB,KAE/C,cAAC,IAAD,CAAM9B,GAAE,uBAAoBM,GAA5B,SACI,mBACIP,UAAY,oBACZ4C,MAAS,CAACC,OAAQ,UAAUG,MAAO,QAAQC,MAAM,QAAQE,YAAa,eAIjFX,EACG,qBAAIxC,UAAY,aAAhB,UACI,qBAAIA,UAAY,kBAAhB,oBAA0CS,KAC1C,qBAAIT,UAAY,kBAAhB,oBAA0CU,QAE/C,e,GAtDTR,aCqBPkD,E,4JAtBX,WACI,OACI,cAACd,EAAD,UACK,SAAAF,GAAU,IACAX,EAAYW,EAAZX,SACP,OACI,eAAC,IAAM4B,SAAP,WACI,qBAAIrD,UAAY,iBAAhB,UAAiC,sBAAMA,UAAY,cAAlB,qBAAjC,WACCyB,EAASI,KAAI,SAAAF,GAAO,OACjB,cAAC,EAAD,CAEIA,QAAWA,GADJA,EAAQpB,iB,GAX5BL,a,yBCAjBoD,EAAiB,SAAC,GAQjB,IAPHC,EAOE,EAPFA,MACA/C,EAME,EANFA,KACA4B,EAKE,EALFA,MACAoB,EAIE,EAJFA,YACAhC,EAGE,EAHFA,KACAiC,EAEE,EAFFA,SACAC,EACE,EADFA,MAEA,OACI,sBAAK1D,UAAY,aAAjB,UACI,uBAAO2D,QAAWnD,EAAlB,SAAyB+C,IACrB,uBACI/B,KAAQA,EACRhB,KAAQA,EACRR,UAAa4D,IAAW,+BAA+B,CACnD,aAAeF,IAEnBF,YAAeA,EACfpB,MAASA,EACTqB,SAAYA,IAEfC,GAAS,qBAAK1D,UAAY,mBAAjB,SAAqC0D,QAY/DJ,EAAeO,aAAe,CAC1BrC,KAAO,QAEI8B,QC2DAQ,E,4MA7FXxD,MAAQ,CACJE,KAAM,GACNC,MAAO,GACPC,MAAO,GACPgD,MAAO,I,EAEXD,SAAW,SAACM,GAAD,OAAO,EAAK7C,SAAL,eAAgB6C,EAAEC,OAAOxD,KAAOuD,EAAEC,OAAO5B,S,EAC3D6B,S,uCAAW,WAAOlC,EAASgC,GAAhB,yBAAA/B,EAAA,yDACP+B,EAAEG,iBADK,EAEoB,EAAK5D,MAAzBE,EAFA,EAEAA,KAAKC,EAFL,EAEKA,MAAMC,EAFX,EAEWA,MAEN,KAATF,EAJI,uBAKH,EAAKU,SAAS,CAACwC,MAAO,CAAClD,KAAM,sBAL1B,6BAQM,KAAVC,EARI,uBASH,EAAKS,SAAS,CAACwC,MAAO,CAACjD,MAAO,uBAT3B,6BAYM,KAAVC,EAZI,wBAaH,EAAKQ,SAAS,CAACwC,MAAO,CAAChD,MAAO,uBAb3B,kCAgBDyD,EAAa,CACf3D,OACAC,QACAC,SAnBG,UAqBWuB,IAAMmC,KAAK,6CAA6CD,GArBnE,QAqBDhC,EArBC,OAsBPJ,EAAS,CACLP,KAAM,cACNI,QAASO,EAAIlB,OAGjB,EAAKC,SAAS,CACVV,KAAM,GACNC,MAAO,GACPC,MAAO,GACPgD,MAAO,KAEX,EAAK3D,MAAMsE,QAAQC,KAAK,KAjCjB,4C,oGAmCX,WAAU,IAAD,SAC+BxE,KAAKQ,MAAlCE,EADF,EACEA,KAAMC,EADR,EACQA,MAAOC,EADf,EACeA,MAAOgD,EADtB,EACsBA,MAC3B,OACI,cAACpB,EAAD,UACK,SAAAF,GAAU,IACAL,EAAYK,EAAZL,SACP,OACI,sBAAK/B,UAAY,YAAjB,UACI,sBAAKA,UAAY,wBAAjB,UAAyC,sBAAMA,UAAY,cAAlB,iBAAzC,cACA,qBAAKA,UAAY,YAAjB,SACI,uBAAMiE,SAAY,EAAKA,SAASf,KAAK,EAAKnB,GAA1C,UACI,cAAC,EAAD,CACIwB,MAAQ,OACR/C,KAAO,OACPgD,YAAc,aACdpB,MAAS5B,EACTiD,SAAY,EAAKA,SACjBC,MAASA,EAAMlD,OAEnB,cAAC,EAAD,CACI+C,MAAQ,QACR/C,KAAO,QACPgB,KAAO,QACPgC,YAAc,cACdpB,MAAS3B,EACTgD,SAAY,EAAKA,SACjBC,MAASA,EAAMjD,QAEnB,cAAC,EAAD,CACI8C,MAAQ,QACR/C,KAAO,QACPgB,KAAO,QACPgC,YAAc,cACdpB,MAAS1B,EACT+C,SAAY,EAAKA,SACjBC,MAASA,EAAMhD,QAEnB,wBACIc,KAAK,SACLxB,UAAU,kBAFd,wC,GAhFXE,aCyGVqE,E,4MAxGXjE,MAAQ,CACJE,KAAM,GACNC,MAAO,GACPC,MAAO,GACPgD,MAAO,I,EAYXD,SAAW,SAACM,GAAD,OAAO,EAAK7C,SAAL,eAAgB6C,EAAEC,OAAOxD,KAAOuD,EAAEC,OAAO5B,S,EAC3D6B,S,uCAAW,WAAOlC,EAASgC,GAAhB,2BAAA/B,EAAA,yDACP+B,EAAEG,iBADK,EAEoB,EAAK5D,MAAzBE,EAFA,EAEAA,KAAKC,EAFL,EAEKA,MAAMC,EAFX,EAEWA,MAEN,KAATF,EAJI,uBAKH,EAAKU,SAAS,CAACwC,MAAO,CAAClD,KAAM,sBAL1B,6BAQM,KAAVC,EARI,uBASH,EAAKS,SAAS,CAACwC,MAAO,CAACjD,MAAO,uBAT3B,6BAYM,KAAVC,EAZI,wBAaH,EAAKQ,SAAS,CAACwC,MAAO,CAAChD,MAAO,uBAb3B,kCAgBD8D,EAAgB,CAClBhE,OACAC,QACAC,SAEGH,EAAM,EAAKR,MAAMa,MAAMC,OAAvBN,GArBA,UAsBW0B,IAAMwC,IAAN,qDAAwDlE,GAAKiE,GAtBxE,QAsBDrC,EAtBC,OAuBPJ,EAAS,CACLP,KAAM,iBACNI,QAASO,EAAIlB,OAGjB,EAAKC,SAAS,CACVV,KAAM,GACNC,MAAO,GACPC,MAAO,GACPgD,MAAO,KAEX,EAAK3D,MAAMsE,QAAQC,KAAK,KAlCjB,4C,sJAXX,gCAAAtC,EAAA,6DACWzB,EAAMT,KAAKC,MAAMa,MAAMC,OAAvBN,GADX,SAEsB0B,IAAMC,IAAN,qDAAwD3B,IAF9E,OAEU4B,EAFV,OAGUR,EAAUQ,EAAIlB,KACpBnB,KAAKoB,SAAS,CACVV,KAAMmB,EAAQnB,KACdC,MAAOkB,EAAQlB,MACfC,MAAOiB,EAAQjB,QAPvB,gD,0EA+CA,WAAU,IAAD,SAC+BZ,KAAKQ,MAAlCE,EADF,EACEA,KAAMC,EADR,EACQA,MAAOC,EADf,EACeA,MAAOgD,EADtB,EACsBA,MAC3B,OACI,cAACpB,EAAD,UACK,SAAAF,GAAU,IACAL,EAAYK,EAAZL,SACP,OACI,sBAAK/B,UAAY,YAAjB,UACI,sBAAKA,UAAY,wBAAjB,UAAyC,sBAAMA,UAAY,cAAlB,kBAAzC,cACA,qBAAKA,UAAY,YAAjB,SACI,uBAAMiE,SAAY,EAAKA,SAASf,KAAK,EAAKnB,GAA1C,UACI,cAAC,EAAD,CACIwB,MAAQ,OACR/C,KAAO,OACPgD,YAAc,aACdpB,MAAS5B,EACTiD,SAAY,EAAKA,SACjBC,MAASA,EAAMlD,OAEnB,cAAC,EAAD,CACI+C,MAAQ,QACR/C,KAAO,QACPgB,KAAO,QACPgC,YAAc,cACdpB,MAAS3B,EACTgD,SAAY,EAAKA,SACjBC,MAASA,EAAMjD,QAEnB,cAAC,EAAD,CACI8C,MAAQ,QACR/C,KAAO,QACPgB,KAAO,QACPgC,YAAc,cACdpB,MAAS1B,EACT+C,SAAY,EAAKA,SACjBC,MAASA,EAAMhD,QAEnB,wBACIc,KAAK,SACLxB,UAAU,kBAFd,2C,GA3FVE,a,OC+BXwE,MAtBf,WACE,OACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,sBAAK1E,UAAU,MAAf,UACE,cAAC,EAAD,CAAQL,SAAW,oBACnB,qBAAKK,UAAY,iBAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2E,OAAK,EAACC,KAAO,IAAIC,UAAazB,IACrC,cAAC,IAAD,CAAOuB,OAAK,EAACC,KAAO,SAASC,UAAa1E,IAC1C,cAAC,IAAD,CAAOwE,OAAK,EAACC,KAAO,eAAeC,UAAaf,IAChD,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAO,oBAAoBC,UAAaN,IACrD,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAO,YAAYC,UAAaxE,IAC7C,cAAC,IAAD,CAAOwE,UAAazE,iBCfnB0E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlE,MAAK,YAAkD,IAA/CmE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e7f152bc.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\nclass Header extends Component {\r\n    PropTypes = {\r\n        branding: PropTypes.string.isRequired\r\n    };\r\n    render() {\r\n        const {branding} = this.props;\r\n        return(\r\n            <div>\r\n                <nav className = \"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n                    <div className = \"container\">\r\n                        <Link className = \"navbar-brand\" to=\"/\">\r\n                            {branding}\r\n                        </Link>\r\n                        <ul className = \"navbar-nav\">\r\n                            <li className = \"nav-item\">\r\n                                <Link className = \"nav-link\" to=\"/\"><i className = \"fas fa-home pr-2\"/>Home</Link>\r\n                            </li>\r\n                            <li className = \"nav-item\">\r\n                                <Link className = \"nav-link\" to=\"/contact/add\"><i className = \"fas fa-plus pr-2\"/>Add Contact</Link>\r\n                            </li>\r\n                            <li className = \"nav-item\">\r\n                                <Link className = \"nav-link\" to=\"/about\"><i className = \"fas fa-question pr-2\"/>About Us</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className = \"display-4\"><span className = \"text-danger\">About</span> Contact Manager</h1>\r\n            <p className = \"lead\">Simple app to manage contacts</p>\r\n            <p className = \"text-secondary\">Version 1.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className = \"display-4\"><span className = \"text-danger\">404</span> Page Not Found</h1>\r\n            <p className = \"lead\">Sorry, this page dosen't exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nclass Test extends Component {\r\n    state = {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users/'+this.props.match.params.id)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({\r\n                id: data.id,\r\n                name: data.name,\r\n                email: data.email,\r\n                phone: data.phone\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        const {id,name,email,phone} = this.state;\r\n        return (\r\n            <div>\r\n                <h1 className = \"display-4\"><span className = \"text-danger\">Test</span> Fetch Data From API</h1>\r\n                <h1><span className = \"text-danger\">ID</span>: {id}</h1>\r\n                <h1>Name: {name}</h1>\r\n                <h2>Email: {email}</h2>\r\n                <h3>Phone: {phone}</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test;","import React, {Component} from 'react';\r\nimport axios from 'axios'\r\nconst Context =  React.createContext();\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: [action.payload,...state.contacts]\r\n        }\r\n        case 'UPDATE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.map(\r\n                    contact => contact.id === action.payload.id ? (\r\n                        contact = action.payload\r\n                    ) : contact\r\n                )\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch : action => this.setState(\r\n            state => reducer(state,action)\r\n        )\r\n    }\r\n    async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts: res.data});\r\n    }\r\n    render(){\r\n        return(\r\n            <Context.Provider value = {this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Consumer} from '../../context'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom';\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo : false\r\n    };\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try{\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({\r\n                type: 'DELETE_CONTACT',\r\n                payload: id\r\n            })\r\n        }\r\n        catch (e){\r\n            dispatch({\r\n                type: 'DELETE_CONTACT',\r\n                payload: id\r\n            })\r\n        }\r\n    }\r\n    PropTypes = {\r\n        contact: PropTypes.object.isRequired,\r\n    };\r\n    render() {\r\n        const {id,name,email,phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className = \"card card-body mb-3\">\r\n                            <h4>{name} \r\n                                <i className=\"fas fa-sort-down\" \r\n                                    style = {{cursor: 'pointer',paddingLeft: '0.5rem'}} \r\n                                    onClick={() => {\r\n                                        this.setState({showContactInfo:!this.state.showContactInfo})\r\n                                    }}>\r\n                                </i>\r\n                                <i className = \"fas fa-times\" \r\n                                    style = {{cursor: 'pointer',float: 'right', color: 'red'}}\r\n                                    onClick = {this.onDeleteClick.bind(this,id,dispatch)}\r\n                                />\r\n                                <Link to = {`contact/edit/${id}`}>\r\n                                    <i \r\n                                        className = \"fas fa-pencil-alt\"\r\n                                        style = {{cursor: 'pointer',float: 'right',color:'black',marginRight: '1rem'}}\r\n                                    />\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo? (\r\n                                <ul className = \"list-group\">\r\n                                    <li className = \"list-group-item\">Email: {email}</li>\r\n                                    <li className = \"list-group-item\">Phone: {phone}</li>\r\n                                </ul>\r\n                            ): null}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport {Consumer} from '../../context'\r\nclass Contacts extends Component {\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {contacts} = value;\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className = \"display-4 mb-2\"><span className = \"text-danger\">Contact</span> List</h1>\r\n                            {contacts.map(contact =>\r\n                                <Contact \r\n                                    key = {contact.id} \r\n                                    contact = {contact}\r\n                                />    \r\n                            )}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className = \"form-group\">\r\n            <label htmlFor = {name}>{label}</label>\r\n                <input \r\n                    type = {type}\r\n                    name = {name}\r\n                    className = {classnames('form-control form-control-lg',{\r\n                        'is-invalid' : error\r\n                    })}\r\n                    placeholder = {placeholder}\r\n                    value = {value}\r\n                    onChange = {onChange}\r\n                />\r\n                {error && <div className = \"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    )\r\n}\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\nTextInputGroup.defaultProps = {\r\n    type : 'text'\r\n}\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\nimport axios from 'axios'\r\n//import uuid from 'uuid'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        error: {}\r\n    }\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value}); \r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n        const {name,email,phone} = this.state;\r\n        //Check valid input\r\n        if(name === ''){\r\n            this.setState({error: {name: 'Name is required'}})\r\n            return\r\n        }\r\n        if(email === ''){\r\n            this.setState({error: {email: 'Email is required'}})\r\n            return\r\n        }\r\n        if(phone === ''){\r\n            this.setState({error: {phone: 'Phone is required'}})\r\n            return\r\n        }\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone,\r\n        }\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n        dispatch({\r\n            type: 'ADD_CONTACT',\r\n            payload: res.data\r\n        })\r\n        //Clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            error: {}\r\n        })\r\n        this.props.history.push('/')\r\n    };\r\n    render() {\r\n        const {name, email, phone, error} = this.state;\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className = \"card mb-3\">\r\n                            <div className = \"card-header display-4\"><span className = \"text-danger\">Add</span> Contact</div>\r\n                            <div className = \"card-body\">\r\n                                <form onSubmit = {this.onSubmit.bind(this,dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label = \"Name\"\r\n                                        name = \"name\"\r\n                                        placeholder = \"Enter Name\"\r\n                                        value = {name}\r\n                                        onChange = {this.onChange}\r\n                                        error = {error.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label = \"Email\"\r\n                                        name = \"email\"\r\n                                        type = \"email\"\r\n                                        placeholder = \"Enter Email\"\r\n                                        value = {email}\r\n                                        onChange = {this.onChange}\r\n                                        error = {error.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label = \"Phone\"\r\n                                        name = \"phone\"\r\n                                        type = \"phone\"\r\n                                        placeholder = \"Enter Phone\"\r\n                                        value = {phone}\r\n                                        onChange = {this.onChange}\r\n                                        error = {error.phone}\r\n                                    />\r\n                                    <button \r\n                                        type=\"submit\" \r\n                                        className=\"btn btn-primary\">Add Contact\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\n//import uuid from 'uuid'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        error: {}\r\n    }\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value}); \r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n        const {name,email,phone} = this.state;\r\n        //Check valid input\r\n        if(name === ''){\r\n            this.setState({error: {name: 'Name is required'}})\r\n            return\r\n        }\r\n        if(email === ''){\r\n            this.setState({error: {email: 'Email is required'}})\r\n            return\r\n        }\r\n        if(phone === ''){\r\n            this.setState({error: {phone: 'Phone is required'}})\r\n            return\r\n        }\r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updateContact);\r\n        dispatch({\r\n            type: 'UPDATE_CONTACT',\r\n            payload: res.data\r\n        })\r\n        //Clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            error: {}\r\n        })\r\n        this.props.history.push('/')\r\n    };\r\n    render() {\r\n        const {name, email, phone, error} = this.state;\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className = \"card mb-3\">\r\n                            <div className = \"card-header display-4\"><span className = \"text-danger\">Edit</span> Contact</div>\r\n                            <div className = \"card-body\">\r\n                                <form onSubmit = {this.onSubmit.bind(this,dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label = \"Name\"\r\n                                        name = \"name\"\r\n                                        placeholder = \"Enter Name\"\r\n                                        value = {name}\r\n                                        onChange = {this.onChange}\r\n                                        error = {error.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label = \"Email\"\r\n                                        name = \"email\"\r\n                                        type = \"email\"\r\n                                        placeholder = \"Enter Email\"\r\n                                        value = {email}\r\n                                        onChange = {this.onChange}\r\n                                        error = {error.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label = \"Phone\"\r\n                                        name = \"phone\"\r\n                                        type = \"phone\"\r\n                                        placeholder = \"Enter Phone\"\r\n                                        value = {phone}\r\n                                        onChange = {this.onChange}\r\n                                        error = {error.phone}\r\n                                    />\r\n                                    <button \r\n                                        type=\"submit\" \r\n                                        className=\"btn btn-primary\">Update Contact\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n","import './App.css';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/fontawesome.min.css';\nimport '@fortawesome/fontawesome-free/js/fontawesome.min.js';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport {Provider} from './context';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding = \"Contact Manager\"/>\n          <div className = \"container mt-2\">\n            <Switch>\n              <Route exact path = \"/\" component = {Contacts}/>\n              <Route exact path = \"/about\" component = {About}/>\n              <Route exact path = \"/contact/add\" component = {AddContact}/>\n              <Route exact path = \"/contact/edit/:id\" component = {EditContact}/>\n              <Route exact path = \"/test/:id\" component = {Test}/>\n              <Route component = {NotFound}/>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}